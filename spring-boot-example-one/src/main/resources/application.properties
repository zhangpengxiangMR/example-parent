#springDataJpa
#Spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false
#Spring.datasource.username=root
#Spring.datasource.password=zhang
#Spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#primary
spring.primary.datasource.jdbc-url=jdbc:mysql://localhost:3306/spring_boot?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
spring.primary.datasource.username=root
spring.primary.datasource.password=zhang
spring.primary.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#secondary
spring.secondary.datasource.jdbc-url=jdbc:mysql://localhost:3306/spring_boot_secondary?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
spring.secondary.datasource.username=root
spring.secondary.datasource.password=zhang
spring.secondary.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



#自动创建|更新|验证数据库表结构
#create：每次加载 hibernate 时都会删除上一次的生成的表，然后根据你的 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：每次加载 hibernate 时根据 model 类生成表，但是 sessionFactory 一关闭，表就自动删除。
#update：最常用的属性，第一次加载 hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），以后加载 hibernate 时根据 model 类自动更新表结构，即使表结构改变了，但表中的行仍然存在，不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#validate ：每次加载 hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
Spring.jpa.properties.hibernate.hbm2ddl.auto=update
#主要是指定生成表名的存储引擎为 InneoDB
Spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#是否打印出自动生产的 SQL，方便调试的时候查看
Spring.jpa.show-sql= true

com.pykj.title=纯洁的微笑
com.pykj.description=分享生活和技术
